{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "5 CSE 04_20191CSE0224_NASSCOM-PROJECT.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "7vJw_cOZvrcY"
      },
      "source": [
        "import numpy as np \n",
        "import pandas as pd \n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "execution_count": 74,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "id": "XLcQVOSuvzDc",
        "outputId": "03f0ae35-9753-4274-e51f-f3a4dfd326d9"
      },
      "source": [
        "df = pd.read_csv('/content/audi.csv')\n",
        "df"
      ],
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model</th>\n",
              "      <th>year</th>\n",
              "      <th>price</th>\n",
              "      <th>transmission</th>\n",
              "      <th>mileage</th>\n",
              "      <th>fuelType</th>\n",
              "      <th>tax</th>\n",
              "      <th>mpg</th>\n",
              "      <th>engineSize</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A1</td>\n",
              "      <td>2017</td>\n",
              "      <td>12500</td>\n",
              "      <td>Manual</td>\n",
              "      <td>15735</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150</td>\n",
              "      <td>55.4</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A6</td>\n",
              "      <td>2016</td>\n",
              "      <td>16500</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>36203</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>20</td>\n",
              "      <td>64.2</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A1</td>\n",
              "      <td>2016</td>\n",
              "      <td>11000</td>\n",
              "      <td>Manual</td>\n",
              "      <td>29946</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>30</td>\n",
              "      <td>55.4</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A4</td>\n",
              "      <td>2017</td>\n",
              "      <td>16800</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>25952</td>\n",
              "      <td>Diesel</td>\n",
              "      <td>145</td>\n",
              "      <td>67.3</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A3</td>\n",
              "      <td>2019</td>\n",
              "      <td>17300</td>\n",
              "      <td>Manual</td>\n",
              "      <td>1998</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145</td>\n",
              "      <td>49.6</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10663</th>\n",
              "      <td>A3</td>\n",
              "      <td>2020</td>\n",
              "      <td>16999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>4018</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>145</td>\n",
              "      <td>49.6</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10664</th>\n",
              "      <td>A3</td>\n",
              "      <td>2020</td>\n",
              "      <td>16999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>1978</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150</td>\n",
              "      <td>49.6</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10665</th>\n",
              "      <td>A3</td>\n",
              "      <td>2020</td>\n",
              "      <td>17199</td>\n",
              "      <td>Manual</td>\n",
              "      <td>609</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150</td>\n",
              "      <td>49.6</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10666</th>\n",
              "      <td>Q3</td>\n",
              "      <td>2017</td>\n",
              "      <td>19499</td>\n",
              "      <td>Automatic</td>\n",
              "      <td>8646</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150</td>\n",
              "      <td>47.9</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10667</th>\n",
              "      <td>Q3</td>\n",
              "      <td>2016</td>\n",
              "      <td>15999</td>\n",
              "      <td>Manual</td>\n",
              "      <td>11855</td>\n",
              "      <td>Petrol</td>\n",
              "      <td>150</td>\n",
              "      <td>47.9</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10668 rows Ã— 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      model  year  price transmission  mileage fuelType  tax   mpg  engineSize\n",
              "0        A1  2017  12500       Manual    15735   Petrol  150  55.4         1.4\n",
              "1        A6  2016  16500    Automatic    36203   Diesel   20  64.2         2.0\n",
              "2        A1  2016  11000       Manual    29946   Petrol   30  55.4         1.4\n",
              "3        A4  2017  16800    Automatic    25952   Diesel  145  67.3         2.0\n",
              "4        A3  2019  17300       Manual     1998   Petrol  145  49.6         1.0\n",
              "...     ...   ...    ...          ...      ...      ...  ...   ...         ...\n",
              "10663    A3  2020  16999       Manual     4018   Petrol  145  49.6         1.0\n",
              "10664    A3  2020  16999       Manual     1978   Petrol  150  49.6         1.0\n",
              "10665    A3  2020  17199       Manual      609   Petrol  150  49.6         1.0\n",
              "10666    Q3  2017  19499    Automatic     8646   Petrol  150  47.9         1.4\n",
              "10667    Q3  2016  15999       Manual    11855   Petrol  150  47.9         1.4\n",
              "\n",
              "[10668 rows x 9 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cz-YPNeV6ikN"
      },
      "source": [
        "Print the information of csv file"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KefP65JAv-g7",
        "outputId": "306ad92c-bb3a-4013-8225-3ef0555d35ad"
      },
      "source": [
        "df=df[['model','year','transmission','fuelType','mileage','tax','mpg','engineSize','price']]\n",
        "print(df)\n",
        "print(df.info())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      model  year transmission fuelType  mileage  tax   mpg  engineSize  price\n",
            "0        A1  2017       Manual   Petrol    15735  150  55.4         1.4  12500\n",
            "1        A6  2016    Automatic   Diesel    36203   20  64.2         2.0  16500\n",
            "2        A1  2016       Manual   Petrol    29946   30  55.4         1.4  11000\n",
            "3        A4  2017    Automatic   Diesel    25952  145  67.3         2.0  16800\n",
            "4        A3  2019       Manual   Petrol     1998  145  49.6         1.0  17300\n",
            "...     ...   ...          ...      ...      ...  ...   ...         ...    ...\n",
            "10663    A3  2020       Manual   Petrol     4018  145  49.6         1.0  16999\n",
            "10664    A3  2020       Manual   Petrol     1978  150  49.6         1.0  16999\n",
            "10665    A3  2020       Manual   Petrol      609  150  49.6         1.0  17199\n",
            "10666    Q3  2017    Automatic   Petrol     8646  150  47.9         1.4  19499\n",
            "10667    Q3  2016       Manual   Petrol    11855  150  47.9         1.4  15999\n",
            "\n",
            "[10668 rows x 9 columns]\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10668 entries, 0 to 10667\n",
            "Data columns (total 9 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   model         10668 non-null  object \n",
            " 1   year          10668 non-null  int64  \n",
            " 2   transmission  10668 non-null  object \n",
            " 3   fuelType      10668 non-null  object \n",
            " 4   mileage       10668 non-null  int64  \n",
            " 5   tax           10668 non-null  int64  \n",
            " 6   mpg           10668 non-null  float64\n",
            " 7   engineSize    10668 non-null  float64\n",
            " 8   price         10668 non-null  int64  \n",
            "dtypes: float64(2), int64(4), object(3)\n",
            "memory usage: 750.2+ KB\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0THi2a47wMk0",
        "outputId": "d191dcd7-6315-4992-d1cd-88dc58684e91"
      },
      "source": [
        "df['year'] = df['year'].astype(object)\n",
        "df.isnull().sum()\n",
        "print(df.dtypes)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "model            object\n",
            "year             object\n",
            "transmission     object\n",
            "fuelType         object\n",
            "mileage           int64\n",
            "tax               int64\n",
            "mpg             float64\n",
            "engineSize      float64\n",
            "price             int64\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XtS_CewNwl2e",
        "outputId": "04761599-0edb-4ab9-ba0f-3177a84bf0ba"
      },
      "source": [
        "df.corr()[\"price\"].sort_values()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "mpg          -0.600334\n",
              "mileage      -0.535357\n",
              "tax           0.356157\n",
              "engineSize    0.591262\n",
              "price         1.000000\n",
              "Name: price, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LbNsuyyj8F-a"
      },
      "source": [
        "Print the unique values of fuel type and plot a bar graph"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 319
        },
        "id": "NngJJGAprD4l",
        "outputId": "10789a37-8e36-4ba7-b073-e0b7ca4d6d3f"
      },
      "source": [
        "df.value_counts(df[\"fuelType\"]).plot.bar()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcc824d850>"
            ]
          },
          "metadata": {},
          "execution_count": 46
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zWdhn-Rn8Zdz"
      },
      "source": [
        "count plot"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 568
        },
        "id": "8nCKM8kRwwvA",
        "outputId": "55997f9d-8682-46f7-a93f-33e16598a109"
      },
      "source": [
        "plt.figure(figsize=(12,8))\n",
        "sns.countplot(df[\"transmission\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcc811b190>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "4Wvks2c2rGjW",
        "outputId": "ca133466-b920-4077-ec06-cc7d3f9df3eb"
      },
      "source": [
        "plt.figure(figsize=(12,8))\n",
        "sns.countplot(x = df[\"model\"].T )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcd4141110>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "stVOjo1ZrKRF",
        "outputId": "9575fadb-6c85-435c-97dc-4a7b950a5cc6"
      },
      "source": [
        "plt.figure(figsize=(12,8))\n",
        "sns.countplot(x = df[\"year\"].T )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcd4152150>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        },
        "id": "lhEYagHsreka",
        "outputId": "0ecaddc2-c6dc-4ebd-dff3-c51ba7a15584"
      },
      "source": [
        "plt.figure(figsize=(15,5),facecolor='w') \n",
        "sns.barplot(x = df[\"year\"], y = df[\"price\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcd3f9eb10>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x360 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 323
        },
        "id": "BJWjtYsOrheA",
        "outputId": "eea5fa83-3ff6-41a9-9e3f-f3191af1bde6"
      },
      "source": [
        "plt.figure(figsize=(26,12),facecolor='w') \n",
        "sns.barplot(x = df[\"year\"], y = df[\"price\"] ,hue=df[\"transmission\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcd3ef59d0>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABe0AAAK5CAYAAAAimgUFAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdfZSWZYE/8O/ACIQgoqIQ2AoNEeAg6PCSL6ugrIqG5guy2xFMj6xosrGbWIv5tpZIW5mJJ/G4CW2CK5ualphmWuELDjoqooUu2DAyLYGgFigzzO8P1znxUxCTh7mRz+ccz8xz39d93d/7+cvz5ZrrLmtqamoKAAAAAADQ4lq1dAAAAAAAAOBtSnsAAAAAACgIpT0AAAAAABSE0h4AAAAAAApCaQ8AAAAAAAVR3tIBdrR99tknBxxwQEvHAAAAAABgF7XPPvskSebPn/+uc7tcaX/AAQekurq6pWMAAAAAALALq6qqes/jtscBAAAAAICCUNoDAAAAAEBBKO0BAAAAAKAgdrk97QEAoGg2btyYFStWZMOGDS0d5SOnXbt26dGjR3bbbbeWjgIAANtEaQ8AAC1sxYoV6dixYw444ICUlZW1dJyPjKampqxevTorVqxIz549WzoOAABsE9vjAABAC9uwYUP23ntvhf12VlZWlr333ttfMAAAsFNR2gMAQAEo7EvD9woAwM5GaQ8AAAAAAAWhtAcAgJ3M2rVrc8MNN7R0jCTJpZdemgceeOADXVNdXZ1JkyaVKBEAAOzcvIgWAAB2Mu+U9ueff/5mxxsaGlJevmP/F//KK6/8wNdUVVWlqqqqBGkAAGDnZ6U9AADsZL7yla/kpZdeysCBAzN48OAcccQRGT16dPr165ckOfnkk3PIIYekf//+mTlzZvN1HTp0yNSpU3PQQQdl2LBh+cMf/pAkuf3223PggQfmoIMOyt/+7d8mSW655ZacfPLJGTlyZA444IBcf/31+fa3v51BgwZl2LBhWbNmTZLkrLPOyrx585pz9evXLwMGDMiXv/zlLc790EMP5cQTT0ySrFmzJieffHIGDBiQYcOG5ZlnnkmSXH755Tn77LNz1FFHpVevXrnuuutK/bUCAEAhWGkPAAA7mWnTpmXx4sWpqanJQw89lBNOOCGLFy9Oz549kyT/8R//kb322ivr16/P4MGDc+qpp2bvvffOn/70pwwbNixf//rXM2XKlNx000255JJLcuWVV+a+++5L9+7ds3bt2ub7LF68OE899VQ2bNiQioqKXHPNNXnqqacyefLkzJ49O1/60peax65evTp33HFHXnjhhZSVlTXPs6W533HZZZdl0KBBufPOO/Pggw9m3LhxqampSZK88MIL+eUvf5nXX389ffr0ycSJE7PbbruV8qsFAIAWZ6U9AADs5IYMGdJc2CfJdddd17yavra2NkuXLk2StGnTpnmF+yGHHJLly5cnSQ477LCcddZZuemmm9LY2Ng8z/Dhw9OxY8d06dIlnTp1ymc/+9kkSWVlZfO17+jUqVPatWuXc845Jz/+8Y/Tvn37rc79jt/85jc588wzkyQjRozI6tWr89prryVJTjjhhLRt2zb77LNP9t133+a/DAAAgI8ypT0AAOzkdt999+bfH3rooTzwwAN59NFH8/TTT2fQoEHZsGFDkmS33XZLWVlZkqR169ZpaGhIknz/+9/PVVddldra2hxyyCFZvXp1kqRt27bN87Zq1ar5c6tWrZqvfUd5eXkWLlyY0047Lffcc0+OO+64rc69Lf7y/n+ZFwAAPsqU9gAAsJPp2LFjXn/99fc8t27dunTu3Dnt27fPCy+8kMcee+x953vppZcydOjQXHnllenSpUtqa2s/cKY33ngj69aty6hRo/Kd73wnTz/99DbNfcQRR+RHP/pRkrf/wWGfffbJHnvs8YHvDwAAHxX2tAcAgJ3M3nvvncMOOywHHnhgPvaxj2W//fZrPnfcccfl+9//fvr27Zs+ffpk2LBh7zvfRRddlKVLl6apqSlHH310DjrooOZ95bfV66+/npNOOikbNmxIU1NTvv3tb29x7ocffrj5undeODtgwIC0b98+s2bN+kD3BQCAj5qypqamppYOsSNVVVWlurq6pWMAAECz559/Pn379m3pGB9Zvl8AAIpoS1217XEAAAAAAKAglPYAAAAAAFAQSnsAAAAAACgIpT0AAAAAABSE0h4AAAAAAApCaQ8AAAAAAAVR3tIBAACAzR1y0eztOt+ib4573zFlZWX5/Oc/n//8z/9MkjQ0NKRbt24ZOnRo7rnnnu2aZ0tuueWWVFdX5/rrr98h9wMAgCKy0h4AAMjuu++exYsXZ/369UmS+++/P927d2/hVAAAsOtR2gMAAEmSUaNG5ac//WmSZM6cOfn7v//75nMLFy7MZz7zmQwaNCiHHnpofvvb3yZ5e3X8KaeckuOOOy69e/fOlClTmq/p0KFD8+/z5s3LWWedlSS5++67M3To0AwaNCjHHHNM/vCHP+yApwMAgJ2D0h4AAEiSjB07NnPnzs2GDRvyzDPPZOjQoc3nPv3pT+fXv/51nnrqqVx55ZX513/91+ZzNTU1ue222/Lss8/mtttuS21t7Vbvc/jhh+exxx7LU089lbFjx2b69OkleyYAANjZ2NMeAABIkgwYMCDLly/PnDlzMmrUqM3OrVu3LuPHj8/SpUtTVlaWjRs3Np87+uij06lTpyRJv3798vLLL2f//fff4n1WrFiRM844IytXrsxbb72Vnj17luaBAABgJ2SlPQAA0Gz06NH58pe/vNnWOEnyta99LcOHD8/ixYtz9913Z8OGDc3n2rZt2/x769at09DQkOTtl9u+4y/HX3jhhfniF7+YZ599NjfeeONm5wAAYFdnpT0AANDs7LPPzp577pnKyso89NBDzcfXrVvX/GLaW265ZZvm2m+//fL888+nT58+ueOOO9KxY8d3zTVr1qztmh8AALZkypQpqa+vT9euXQu9RaPSHgAACmbRN8e12L179OiRSZMmvev4lClTMn78+Fx11VU54YQTtmmuadOm5cQTT0yXLl1SVVWVN954I0ly+eWX5/TTT0/nzp0zYsSILFu2bLs+AwAAvJf6+vrU1dW1dIz3VdbU1NTU0iF2pKqqqlRXV7d0DAAAaPb888+nb9++LR3jI8v3CwBAkowbNy51dXXp3r17Zs+e3dJxtthV29MeAAAAAAAKQmkPAAAAAAAFobQHAAAAAICCUNoDAAAAAEBBKO0BAAAAAKAglPYAAAAAAFAQ5S0dAAAA2Nzvr6zcrvN94tJnt2ncnXfemc997nN5/vnn8+lPf3qrY6+99tpMmDAh7du33x4R39Py5cvzyCOP5B/+4R+SJNXV1Zk9e3auu+66kt0TAABampX2AABAkmTOnDk5/PDDM2fOnPcde+211+bPf/5zSfMsX748t956a/PnqqoqhT0AAB95SnsAACBvvPFGfvOb3+Tmm2/O3LlzkyQPPfRQTjzxxOYxX/ziF3PLLbfkuuuuyyuvvJLhw4dn+PDhSd4u/CsrK3PggQfm4osvbr6mQ4cOueiii9K/f/8cc8wxWbhwYY466qj06tUrP/nJT5K8Xc4fccQROfjgg3PwwQfnkUceSZJ85Stfya9//esMHDgw3/nOdzbL88Ybb+QLX/hCKisrM2DAgPz3f//3DvmeAACg1JT2AABA7rrrrhx33HH51Kc+lb333juLFi3a4thJkybl4x//eH75y1/ml7/8ZV555ZVcfPHFefDBB1NTU5Mnnngid955Z5LkT3/6U0aMGJHnnnsuHTt2zCWXXJL7778/d9xxRy699NIkyb777pv7778/Tz75ZG677bZMmjQpSTJt2rQcccQRqampyeTJkzfL8G//9m/p1KlTnn322TzzzDMZMWJEib4ZAADYsZT2AABA5syZk7FjxyZJxo4du01b5LzjiSeeyFFHHZUuXbqkvLw8n//85/OrX/0qSdKmTZscd9xxSZLKysoceeSR2W233VJZWZnly5cnSTZu3Jhzzz03lZWVOf3007NkyZL3vecDDzyQCy64oPlz586dtzkvAAAUmRfRAgDALm7NmjV58MEH8+yzz6asrCyNjY0pKyvLSSedlE2bNjWP27Bhwweee7fddktZWVmSpFWrVmnbtm3z7w0NDUmS73znO9lvv/3y9NNPZ9OmTWnXrt12eCoAANg5lXylfWNjYwYNGtS89+SyZcsydOjQVFRU5Iwzzshbb72VJHnzzTdzxhlnpKKiIkOHDm1edZMkV199dSoqKtKnT5/cd999zcfnz5+fPn36pKKiItOmTSv1owAAwEfSvHnzcuaZZ+bll1/O8uXLU1tbm549e2bTpk1ZsmRJ3nzzzaxduza/+MUvmq/p2LFjXn/99STJkCFD8vDDD+ePf/xjGhsbM2fOnBx55JHbfP9169alW7duadWqVX74wx+msbHxXff4/40cOTIzZsxo/vzqq6/+NY8OAACFU/KV9t/97nfTt2/fvPbaa0mSiy++OJMnT87YsWNz3nnn5eabb87EiRNz8803p3PnznnxxRczd+7cXHzxxbntttuyZMmSzJ07N88991xeeeWVHHPMMfnd736XJLngggty//33p0ePHhk8eHBGjx6dfv36lfqRAACgpD5x6bM79H5z5szZ7OWxSXLqqadm7ty5GTNmTA488MD07NkzgwYNaj4/YcKEHHfccc1720+bNi3Dhw9PU1NTTjjhhJx00knbfP/zzz8/p556ambPnp3jjjsuu+++e5JkwIABad26dQ466KCcddZZm93/kksuyQUXXJADDzwwrVu3zmWXXZZTTjnlQ34TAADQ8sqampqaSjX5ihUrMn78+EydOjXf/va3c/fdd6dLly6pr69PeXl5Hn300Vx++eW57777cuyxx+byyy/PZz7zmTQ0NKRr165ZtWpV8wr6r371q0nSPC5J87XJ26vx/3LcllRVVaW6urpETwwAAB/c888/n759+7Z0jI8s3y8AAEkybty41NXVpXv37pk9e3ZLx9liV13S7XG+9KUvZfr06WnV6u3brF69OnvuuWfKy99e4N+jR4/U1dUlSerq6rL//vsnScrLy9OpU6esXr16s+N/ec2WjgMAAAAAwM6qZKX9Pffck3333TeHHHJIqW6xzWbOnJmqqqpUVVVl1apVLR0HAAAAAADeU8n2tF+wYEF+8pOf5Gc/+1k2bNiQ1157Lf/0T/+UtWvXpqGhIeXl5VmxYkW6d++eJOnevXtqa2vTo0ePNDQ0ZN26ddl7772bj7/jL6/Z0vH/34QJEzJhwoQkb//JAQAAAAAAFFHJVtpfffXVWbFiRZYvX565c+dmxIgR+dGPfpThw4dn3rx5SZJZs2Y1v6Bq9OjRmTVrVpJk3rx5GTFiRMrKyjJ69OjMnTs3b775ZpYtW5alS5dmyJAhGTx4cJYuXZply5blrbfeyty5czN69OhSPQ4AAAAAAJRcyVbab8k111yTsWPH5pJLLsmgQYNyzjnnJEnOOeecnHnmmamoqMhee+2VuXPnJkn69++fMWPGpF+/fikvL8+MGTPSunXrJMn111+fY489No2NjTn77LPTv3//Hf04AAAAAADsQqZMmZL6+vp07do106dP3+7z75DS/qijjspRRx2VJOnVq1cWLlz4rjHt2rXL7bff/p7XT506NVOnTn3X8VGjRmXUqFHbNSsAAAAAAGxJfX196urqSjb/Dl9pDwAAbN1h3ztsu8634MIF2zTu61//em699da0bt06rVq1yo033pihQ4d+qHsfeuiheeSRR97z3B//+Md069Yt3/ve93Leeee971x33nlnPvWpT6Vfv34fKhMAABRZyfa0BwAAdh6PPvpo7rnnnjz55JN55pln8sADD2T//ff/0PNuqbBPkttvvz3Dhg3LnDlztmmuO++8M0uWLPnQmQAAoMiU9gAAQFauXJl99tknbdu2TZLss88++fjHP55FixblyCOPzCGHHJJjjz02K1euTPL2FpiTJ09OVVVV+vbtmyeeeCKnnHJKevfunUsuuaR53g4dOmzxnnPmzMm3vvWt1NXVZcWKFe95zbx583LWWWflkUceyU9+8pNcdNFFGThwYF566aXU1NRk2LBhGTBgQD73uc/l1Vdf3d5fCwAA7HBKewAAIH/3d3+X2trafOpTn8r555+fhx9+OBs3bsyFF16YefPmZdGiRTn77LM3e9dUmzZtUl1dnfPOOy8nnXRSZsyYkcWLF+eWW27J6tWrt3q/2trarFy5MkOGDMmYMWNy2223bXX8oYcemtGjR+eb3/xmampq8slPfjLjxo3LNddck2eeeSaVlZW54oortst3AQAALUlpDwAApEOHDlm0aFFmzpyZLl265IwzzsiNN96YxYsXZ+TIkRk4cGCuuuqqzVbEjx49OklSWVmZ/v37p1u3bmnbtm169eqV2trard7vtttuy5gxY5IkY8eO3eYtct6xbt26rF27NkceeWSSZPz48fnVr371geYAAIAi8iJaAAAgSdK6descddRROeqoo1JZWZkZM2akf//+efTRR99z/Dtb6bRq1ar593c+NzQ0bDZ26tSp+elPf5okqampyZw5c1JfX58f/ehHSZJXXnklS5cuTe/evVNWVtZ83YYNG7brMwIAQNFZaQ8AAOS3v/1tli5d2vy5pqYmffv2zapVq5pL+40bN+a55577q+b/+te/npqamtTU1OR3v/td3njjjdTV1WX58uVZvnx5vvrVrzavtt9vv/3y/PPPZ9OmTbnjjjua5+jYsWNef/31JEmnTp3SuXPn/PrXv06S/PCHP2xedQ8AADszK+0BAKBgFly4YIff84033siFF16YtWvXpry8PBUVFZk5c2YmTJiQSZMmZd26dWloaMiXvvSl9O/f/0Pda86cOfnc5z632bFTTz01Z5xxRi699NJMmzYtJ554Yrp06ZKqqqq88cYbSd7eRufcc8/Nddddl3nz5mXWrFk577zz8uc//zm9evXKD37wgw+VCwAAiqCsqampqaVD7EhVVVWprq5u6RgAANDs+eefT9++fVs6xkeW7xcAgCQZN25c6urq0r1798yePbvF59lSV22lPQAAAAAAO73fX1m51fMNa/ZKUp6GNS9vdewnLn12Oyf7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AQAAAACgIJT2AAAAAABQEEp7AAAAAAAoCKU9AAAAAAAUhNIeAAAAAAAKQmkPAAAAAAAFobQHAAAAAICCUNoDAAAAAEBBKO0BAAAAAKAglPYAAAAAAFAQSnsAAAAAACgIpT0AAAAAABSE0h4AAAAAAApCaQ8AAAAAAAWhtAcAAAAAgIJQ2gMAAAAAQEEo7QEAAAAAoCCU9gAAAAAAUBBKewAAAAAAKAilPQAAAAAAFITSHgAAAAAACkJpDwAAAAAABaG0BwAAAACAgihv6QAAAAAAALAlU6ZMSX19fbp27Zrp06e3dJySU9oDAAAAAFBY9fX1qaura+kYO4ztcQAAAAAAoCCU9gAAAAAAUBBKewAAAAAAKAilPQAAAAAAFIQX0QIAAADATmTKlCmpr69P165dM3369JaOA2xnSnsAAAAA2InU19enrq6upWMAJWJ7HAAAAAAAKAilPQAAAAAAFETJSvva2toMHz48/fr1S//+/fPd7343SXL55Zene/fuGThwYAYOHJif/exnzddcffXVqaioSJ8+fXLfffc1H58/f3769OmTioqKTJs2rfn4smXLMnTo0FRUVOSMM87IW2+9VarHAQAAAACAkitZaV9eXp5vfetbWbJkSR577LHMmDEjS5YsSZJMnjw5NTU1qampyahRo5IkS5Ysydy5c/Pcc89l/vz5Of/889PY2JjGxsZccMEFuffee7NkyZLMmTOneZ6LL744kydPzosvvpjOnTvn5ptvLtXjAAAAAABAyZXsRbTdunVLt27dkiQdO3ZM3759t/qCjLvuuitjx45N27Zt07Nnz1RUVGThwoVJkoqKivTq1StJMnbs2Nx1113p27dvHnzwwdx6661JkvHjx+fyyy/PxIkTS/VIAAAAAABsR4dcNPt9x3T84+tpneT3f3x9q+Pv6Lgdg7WgHbKn/fLly/PUU09l6NChSZLrr78+AwYMyNlnn51XX301SVJXV5f999+/+ZoePXqkrq5ui8dXr16dPffcM+Xl5Zsdfy8zZ85MVVVVqqqqsmrVqlI9JgAAAAAAfCglL+3feOONnHrqqbn22muzxx57ZOLEiXnppZdSU1OTbt265V/+5V9KHSETJkxIdXV1qqur06VLl5LfDwAAAAAA/hol2x4nSTZu3JhTTz01n//853PKKackSfbbb7/m8+eee25OPPHEJEn37t1TW1vbfG7FihXp3r17krzn8b333jtr165NQ0NDysvLNxsPAAAAAAA7o5KttG9qaso555yTvn375p//+Z+bj69cubL59zvuuCMHHnhgkmT06NGZO3du3nzzzSxbtixLly7NkCFDMnjw4CxdujTLli3LW2+9lblz52b06NEpKyvL8OHDM2/evCTJrFmzctJJJ5XqcQAAAAAAoORKttJ+wYIF+eEPf5jKysoMHDgwSfKNb3wjc+bMSU1NTcrKynLAAQfkxhtvTJL0798/Y8aMSb9+/VJeXp4ZM2akdevWSd7eA//YY49NY2Njzj777PTv3z9Jcs0112Ts2LG55JJLMmjQoJxzzjmlehwAAAAAACi5kpX2hx9+eJqamt51fNSoUVu8ZurUqZk6dep7XvNe1/Xq1SsLFy78cEEBAAAAAKAgSv4iWgAAAAAAYNso7QEAAAAAoCCU9gAAAAAAUBBKewAAAAAAKIiSvYgWAAAAAPhgfn9l5fuOaVizV5LyNKx5eavjP3Hps9sxGbCjKO0BAAAAACisTW123+znR53SHgAAAACAwvpT779r6Qg7lD3tAQAAAACgIJT2AAAAAABQEEp7AAAAAAAoCKU9AAAAAAAUhBfRAgAAAAAUwJQpU1JfX5+uXbtm+vTpLR2HFqK0BwAAAIBdkIK4eOrr61NXV9fSMWhhSnsAAAAA2AUpiKGY7GkPAAAAAAAFobQHAAAAAICCsD0OAAAAAMAOcMhFs7d6vuMfX0/rJL//4+vvO/aOjtsxGIVipT0AAAAAABSE0h4AAAAAAApCaQ8AAAAAAAVhT3sAAAAA2Ins025Tkob/+wl81CjtAQAAAGAn8uUBa1s6AiWyqc3um/1k16S0BwAAAICPoMO+d9hWz7dZ2yat0iq1a2u3OnbBhQu2dzS24E+9/66lI1AA9rQHAAAAAICCUNoDAAAAAEBBKO0BAAAAAKAglPYAAAAAAFAQSnsAAAAAACgIpT0AAAAAABSE0h4AAAAAAApCaQ8AAAAAAAVR3tIBAAAAAIAdr6l9UzZlU5raN7V0FOAvKO0BAAAAYBe08bCNLR0BeA+2xwEAAAAAgIJQ2gMAAAAAQEFsc2n/8ssv54EHHkiSrF+/Pq+//nrJQgEAAAAAwK5om0r7m266Kaeddlr+8R//MUmyYsWKnHzyySUNBgAAAAAAu5ptKu1nzJiRBQsWZI899kiS9O7dO//7v/9b0mAAAAAAALCr2abSvm3btmnTpk3z54aGhpSVlZUsFAAAAAAA7Iq2qbQ/8sgj841vfCPr16/P/fffn9NPPz2f/exnS50NAAAAAAB2KdtU2k+bNi1dunRJZWVlbrzxxowaNSpXXXVVqbMBAAAAAMAupXxbBq1fvz5nn312zj333CRJY2Nj1q9fn/bt25c0HAAAAAAA7Eq2aaX90UcfnfXr1zd/Xr9+fY455piShQIAAAAAgF3RNpX2GzZsSIcOHZo/d+jQIX/+859LFgoAAAAAAHZF21Ta77777nnyySebPy9atCgf+9jHShYKAAAAAAB2Rdu0p/21116b008/PR//+MfT1NSU+vr63HbbbaXOBgAAAAAAu5RtKu0HDx6cF154Ib/97W+TJH369Mluu+1W0mAAAAAAALCr2Wpp/+CDD2bEiBH58Y9/vNnx3/3ud0mSU045pXTJAAAAAABgF7PV0v7hhx/OiBEjcvfdd7/rXFlZmdIeAAAAAAC2o62W9ldccUU2bdqU448/PmPGjNlRmQAAAAAAYJfU6n0HtGqV6dOn74gsAAAAAACwS3vf0j5JjjnmmPz7v/97amtrs2bNmub/AAAAAACA7Wer2+O847bbbktZWVluuOGGzY7/z//8T0lCAQAAAMD2NGXKlNTX16dr1652lQAKbZtK+yVLluSGG27Ib37zm5SVleWII47IeeedV+psAAAAALBd1NfXp66urqVjALyvbSrtx48fnz322COTJk1Kktx6660ZP358/uu//quk4QAAAAAAYFeyTaX94sWLs2TJkubPw4cPT79+/UoWCgAAAAAAdkXb9CLagw8+OI899ljz58cffzxVVVUlCwUAAAAAALuibVppv2jRohx66KH5xCc+kST5/e9/nz59+qSysjJlZWV55plnShoSAAAAAAB2BdtU2s+fP7/UOQAAAAAAYJe3TaX93/zN35Q6BwAAAAC8y5QpU1JfX5+uXbtm+vTpLR0HoOS2qbQHAAAAgJZQX1+furq6lo4BsMMo7QEAAADY6R32vcO2er7N2jZplVapXVu71bELLlywvaMBfCCtWjoAAAAAAADwNqU9AAAAAAAUhNIeAAAAAAAKQmkPAAAAAAAFUbLSvra2NsOHD0+/fv3Sv3//fPe7302SrFmzJiNHjkzv3r0zcuTI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2pW/+qu/SmNjY0455ZQ8+OCDSZIdO3ZkypQpXf8dffTR+cAHPlCN6VREJXqSJHfccUcaGxvT1NSU8847L+3t7f09lYrZuHFjzjnnnJx88smZNGlSPve5zyVJtm7dmpkzZ2bChAmZOXNmtm3bliQpiiLvf//7M378+DQ1NeXHP/5xkmTNmjU588wzM2nSpDQ1NeVf/uVfqjan3qpUT5588smcdtppmTJlSiZNmpS///u/r9qceqtSPXnZM888k9GjR+d//s//2e9zqZRK9mTQoEFdr7O1fAPzSvZkw4YNmTVrViZOnJiTTz45TzzxRDWm1GuV6skDDzyw1+/jQw89NHfffXfV5tUblXyeNDc3Z9KkSZk4cWLe//73p1ZXWaxkT6699tpMnjw5kydPPqh+F//iF7/ImWeemT/6oz/KZz/72b2OtWzZspx44okZP358brrppn6fS6VUsif7OieuRZXqyf6OU4sq1ZMXXnghp59+ek455ZRMmjQpH//4x6syn0qp5M9PkuzZsyennnpq/vRP/7Rf51FJlezJ2LFj09jYmClTpmTatGn9PpdKqWRPtm/fnre97W056aSTMnHixDz00EP9Pp9KqFRPfvnLX+51Lnv44Yfn5ptvrsqcequSz5O//du/zaRJkzJ58uRcdtlleeGFF/p9PpVQyZ587nOfy+TJkzNp0qSafY4kr74n//RP/5SmpqY0NjbmrLPOymOPPdZ1rNKcyxZUzHe/+91i9erVxaRJk7q2TZs2rXjwwQeLoiiK2267rfjoRz9aFEVR3HLLLcUVV1xRFEVRbNmypTjttNOKPXv2dDvmaaedVnz3u9/th+r7RiV6snv37uKYY44pnnrqqaIoiuKaa64pPv7xj/fvRCroN7/5TbF69eqiKIrimWeeKSZMmFD87Gc/K6655prixhtvLIqiKG688caiubm5KIqi+OY3v1mcd955RWdnZ/HQQw8Vp59+elEURfHLX/6y+I//+I+iKIqitbW1qK+vL7Zt21aFGfVepXry4osvFi+88EJRFEWxY8eO4oQTTihaW1urMKPeq1RPXvb+97+/uOyyy4r3vve9/TuRCqpkTw477LD+n0AfqGRP/st/+S/F8uXLi6J46edn586d/Tybyqj0z05RFMXTTz9dDB8+/KDvyYoVK4qzzjqr6OjoKDo6OooZM2YUDzzwQFXm1FuV6sk3vvGN4r/+1/9a7N69u3j22WeLadOmFb/73e+qM6leerU92bJlS7Fy5crib/7mb4rPfOYzXcfp6Ogoxo0bV/z6178uXnzxxaKpqan42c9+1v8TqoBK9aQo9n1OXIsq1ZP9HacWVaonnZ2dxY4dO4qiKIpdu3YVp59+evHQQw/182wqp5I/P0VRFP/3//7f4rLLLive+ta39t8kKqySPTnhhBO6/j6uZZXsybx584p/+Id/KIripb8LD5a/jV/pZ6coXvrdfOyxxxZPPPFE/0yiwirVk02bNhVjx44tnnvuuaIoiuLP//zPi9tvv71/J1MhlerJ448/XkyaNKnYuXNnsXv37uLcc88t1q1b1/8TqoBX25MVK1YUW7duLYqiKO65556u8/syncsK7Sts/fr1e52MH3744UVnZ2dRFEWxYcOGYuLEiUVRFMV73vOeYvHixV3j3vKWtxSPPPLIXsf65S9/WYwePbrr62tVb3uya9eu4uijjy6eeOKJorOzs3j3u99dfOlLX+rfSfShuXPnFsuXLy/e+MY3Fr/5zW+KonjpxeaNb3xjURRFsWDBguKf//mfu8b/53H/WVNTU1eIX+sq0ZP29vZizJgxNRva/6He9GTVqlXF29/+9uL222+v6dD+D/WmJwMltP9Dr7UnP/vZz4qzzz67KjX3tUq8nnzpS18q3vGOd/Rf0X3stfbkhz/8YXHaaacVzz33XLFz585i6tSpxdq1a6syh0p7rT1paWkpbrjhhq7t8+fPL/7lX/6lf4vvI6/Uk5d9/OMf3+uPvx/+8IfFrFmzuv79qU99qvjUpz7VP0X3sdfak5f94TnxQNDbnvzhcQaCSvRk586dxamnnlo8/PDDfV5vf+lNXzZu3Fi85S1vKe6///6aDu3/UG96MlBC+z/0Wnuyffv2YuzYsTWfnexLJV5T7rvvvuKss87q81r7y2vtyaZNm4rRo0cXTz/9dLF79+7irW99a3Hffff1a+195bX25M477yzmz5/f9e8bbrih+PSnP90/RfexA+1JURTF1q1bi+OOO64oinKdy1oep49NmjQpS5cuTZL867/+azZu3JgkOeWUU/L1r389HR0dWb9+fVavXt2172VLlizJ29/+9tTV1fV73X3p1fbkda97Xb74xS+msbExxx13XNauXZsrr7yymlOomCeeeCKPPvpozjjjjGzZsiWjRo1KktTX12fLli1JktbW1owZM6bra0aPHp3W1ta9jrNy5crs2rUrf/zHf9x/xfeR3vZk48aNaWpqypgxY3LttdfmuOOO6/9JVFhvetLZ2ZkPfehD+/yYcS3r7fPkhRdeyLRp0zJjxoyaXfLkD/WmJ//xH/+RI488MhdddFFOPfXUXHPNNdmzZ09V5lFJlXqNXbJkSS677LL+K7wP9aYnZ555Zs4555yMGjUqo0aNyuzZszNx4sSqzKOSetOTU045JcuWLctzzz2X9vb2PPDAA93O52rRgfRkfw7kZ6oW9aYnA1WlevKfj1PretuTPXv2ZMqUKRk5cmRmzpw5IHqS9L4vH/jAB9LS0pJDDhk48UVve1JXV5dZs2Zl6tSpWbhwYV+X2y9605P169fnmGOOyV/91V/l1FNPzbve9a7s3LmzP8ruU5V6nT3YzmX3p6GhIVdffXWOP/74jBo1KkcccURmzZrVH2X3qd70ZPLkyfn+97+fp59+Os8991zuueeeg/Jc9rbbbsv555+fpFznsgPnt15JfeUrX8kXvvCFTJ06NTt27MiQIUOSvLSu5ejRozNt2rR84AMfyFlnnZVBgwbt9bUD6YX1P3u1Pdm9e3e++MUv5tFHH81vfvObNDU15cYbb6zyLHrv2WefzcUXX5ybb745hx9++F776urqDvjNms2bN+cv//Ivc/vtt9f8iWwlejJmzJj85Cc/ya9+9assWrSo5v+Q7m1PvvCFL2TOnDkZPXp0X5bZryrxPHnyySezatWq/PM//3M+8IEP5Ne//nVfldsvetuTjo6OfP/7389nP/vZ/OhHP8r/+3//L1/96lf7sOK+V8nX2McffzyzZ8/uizL7VW978qtf/So///nPs2nTprS2tuY73/lOvv/97/dlyX2utz2ZNWtW5syZk7POOiuXXXZZzjzzzG7nc7WmUj87A4medFepnvR0nFpTiZ4MGjQoa9asyaZNm7Jy5cr89Kc/7aty+01v+/KNb3wjI0eOzNSpU/uyzH5ViefKD37wg/z4xz/Ovffem1tvvTXf+973+qrcflGJc9kf//jHueqqq/Loo4/msMMOq+l7qiSVe53dtWtXvv71r+fP//zP+6LMftXbnmzbti1Lly7N+vXr85vf/CY7d+7MP/7jP/ZlyX2utz2ZOHFirr322syaNSvnnXdepkyZctCdyz7wwAO57bbb8ulPf7o/yzwgtZ3w1YCTTjopy5cvz+rVq3PZZZd1XQk9ePDg/O3f/m3WrFmTpUuXZvv27XnjG9/Y9XWPPfZYOjo6BtTJyctebU/WrFmTJPnjP/7j1NXV5ZJLLskPf/jDak6h13bv3p2LL744f/EXf5GLLrooSXLsscdm8+bNSV4KiUaOHJnkpXeD//M7nZs2bUpDQ0OSl24u+ta3vjX/5//8n8yYMaOfZ1FZlerJy4477riud41rVSV68tBDD+WWW27J2LFjc/XVV2fx4sX58Ic/3P+TqZBKPU9efhw3blz+5E/+JI8++mh/TqOiKtGT0aNHZ8qUKRk3blwGDx6cP/uzP+t2M+NaUsnXkzvvvDMXXnhhXve61/XjDCqvEj256667MmPGjLz+9a/P61//+px//vk1e5O3pHLPk4985CNZs2ZNvvWtb6Uoir3O52rNq+nJ/hzI7+haUomeDDSV6sm+jlOrKv08OfLII3POOedk2bJlfVJvf6lEX1asWJGvf/3rGTt2bC699NJ85zvfyTvf+c4+r72vVOq58vLr6siRI3PhhRdm5cqVfVd0H6tET0aPHp3Ro0d3fTrlbW9720FzLvtK7r333px22mk59thj+6ze/lCJnnz729/OG97whhxzzDF53etel4suuqims6VKPU+uvPLKrF69Ot/73vcyfPjwg+pc9ic/+Une9a53ZenSpTnqqKOSlOtcVmjfx377298mSTo7O/PJT34y/+N//I8kyXPPPdf1ca1vfetbGTx4cE4++eSur7vjjjsG5FX2yavvSUNDQ9auXZunnnqqa18tfxy/KIpceeWVmThxYv76r/+6a/vcuXOzaNGiJMmiRYtywQUXdG1fvHhxiqLIww8/nCOOOCKjRo3Krl27cuGFF2bevHl529veVpW5VEqlerJp06Y8//zzSV56F/0HP/hBTjzxxP6fUAVUqif/9E//lA0bNuSJJ57IZz/72cybN69mrzqpVE+2bduWF198MUnS3t6eFStW7PX6W0sq1ZPp06dn+/btXa+z3/nOdw76nrxsIPw+rlRPjj/++Hz3u99NR0dHdu/ene9+97s1+/u4Uj3Zs2dPnn766SQvnfT/5Cc/qdmPWb/anuzP9OnTs27duqxfvz67du3KkiVLMnfu3D6tva9UqicDSaV6sr/j1KJK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\n",
            "text/plain": [
              "<Figure size 1872x864 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 323
        },
        "id": "W9UtHjxirmDz",
        "outputId": "a7fd994c-248f-40f1-ceae-ccfc4027337d"
      },
      "source": [
        "plt.figure(figsize=(26,12),facecolor='w') \n",
        "sns.pointplot(x = df[\"year\"], y = df[\"price\"] ,hue=df[\"fuelType\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fbcd3e4da50>"
            ]
          },
          "metadata": {},
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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
